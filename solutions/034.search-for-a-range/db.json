{"java":"public class Solution {\r\n    public int[] searchRange(int[] nums, int target) {\r\n        int[]result = {-1,-1};\r\n        if(nums==null||nums.length==0)return result;\r\n        int begin = findbegin(nums,target,0,nums.length-1);\r\n        int end = findend(nums,target,0,nums.length-1);\r\n        result[0] = nums[begin]==target?begin:-1;\r\n        result[1] = nums[end]==target?end:-1;\r\n        return result;\r\n    }\r\n    public int findbegin(int[]nums,int target,int low,int high){\r\n        int begin = low;\r\n        int end = high;\r\n        while(begin<end){\r\n            int mid = (begin+end)/2;\r\n            if(nums[mid]<target)begin = mid+1;\r\n            else if(nums[mid]>target)end = mid-1;\r\n            else if(mid!=0&&nums[mid-1]==nums[mid])end = mid-1;\r\n            else return mid;\r\n        }\r\n        return begin;\r\n    }  \r\n    public int findend(int[]nums,int target,int low,int high){\r\n        int begin = low;\r\n        int end = high;\r\n        while(begin<end){\r\n            int mid = (begin+end)/2;\r\n            if(nums[mid]<target)begin = mid+1;\r\n            else if(nums[mid]>target)end = mid-1;\r\n            else if(mid!=nums.length-1&&nums[mid+1]==nums[mid])begin = mid+1;\r\n            else return mid;\r\n        }\r\n        return begin;\r\n    }\r\n}"}