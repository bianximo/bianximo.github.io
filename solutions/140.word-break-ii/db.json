{"java":"public class Solution {\r\n    Map<String,List<String>>map;\r\n    public List<String> wordBreak(String s, List<String> dict) {\r\n        map = new HashMap<>();\r\n        return getBreak(s,dict);\r\n    }\r\n    private boolean containsSuffix(List<String> dict, String str) {\r\n        for (int i = 0; i < str.length(); i++) {\r\n            if (dict.contains(str.substring(i))) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public List<String>getBreak(String s,List<String>dict){\r\n        if(map.containsKey(s))return map.get(s);\r\n        List<String>list = new LinkedList<>();\r\n        if(dict.contains(s)){\r\n            list.add(s);\r\n        }\r\n        for(int i=0;i<s.length();i++){\r\n            String left = s.substring(0,i),right = s.substring(i,s.length());\r\n            if(dict.contains(left)&& containsSuffix(dict, right)){\r\n                List<String>temp = getBreak(right,dict);\r\n                for(String r : temp){\r\n                    list.add(left+\" \"+r);\r\n                }\r\n            }\r\n        }\r\n        map.put(s,list);\r\n        return list;\r\n    }\r\n}"}