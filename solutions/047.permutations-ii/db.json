{"java":"public class Solution {\r\n   \r\n     public List<List<Integer>> permuteUnique(int[] nums) {\r\n    List<List<Integer>> ans = new ArrayList<>();\r\n    Arrays.sort(nums);\r\n    permutating(ans, nums, 0);\r\n    return ans;\r\n}\r\n\r\nprivate void permutating(List<List<Integer>> ans, int[] nums, int start) {\r\n    \r\n\tif (start == nums.length) {\r\n\t\tList<Integer> li = new ArrayList<>();\r\n\t\tfor (int n : nums) {\r\n\t\t\tli.add(n);\r\n\t\t}\r\n\t\tans.add(li);\r\n\t\treturn;\r\n\t}\r\n\tfor (int i = start; i < nums.length; i++) {\r\n\t\tif(!canExchange(nums,start,i)){\r\n\t\t  continue;\r\n\t\t}\r\n\t\tswap(nums, start, i);\r\n\t\tpermutating(ans, nums, start+1);\r\n\t\tswap(nums, start, i);\r\n\t}\r\n}\r\nprivate boolean canExchange(int[]nums,int start,int i){\r\n        for(int j = start;j<i;j++){\r\n            if(nums[j]==nums[i])return false;\r\n        }\r\n        return true;\r\n}\r\n\r\nprivate void swap(int[] nums, int i, int j) {\r\n\tint temp = nums[i];\r\n\tnums[i] = nums[j];\r\n\tnums[j] = temp;\r\n}\r\n}"}