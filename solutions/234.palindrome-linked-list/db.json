{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isPalindrome(ListNode head) {\r\n        ListNode fast = head, slow = head;\r\n    while (fast != null && fast.next != null) {\r\n        fast = fast.next.next;\r\n        slow = slow.next;\r\n    }\r\n    if (fast != null) { // odd nodes: let right half smaller\r\n        slow = slow.next;\r\n    }\r\n    slow = reverse(slow);\r\n    fast = head;\r\n    while(slow!=null&&fast!=null){\r\n        if(slow.val!=fast.val)return false;\r\n        slow = slow.next;\r\n        fast = fast.next;\r\n    }\r\n    return true;\r\n    }\r\n    \r\n    public ListNode reverse(ListNode head){\r\n       ListNode newHead = null;\r\n       while(head!=null){\r\n           ListNode temp = head.next;\r\n           head.next = newHead;\r\n           newHead = head;\r\n           head = temp;\r\n       }\r\n       return newHead;\r\n    }\r\n    \r\n    \r\n}"}