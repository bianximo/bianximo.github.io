{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) {\r\n *         val = x;\r\n *         next = null;\r\n *     }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\r\n        if(headA==null||headB==null)return null;\r\n        ListNode currentA = headA,currentB = headB;\r\n        int lengthA = getLength(headA),lengthB = getLength(headB);\r\n        int step = lengthA-lengthB;\r\n        if(step>0){\r\n            for(int i=0;i<Math.abs(step);i++)currentA = currentA.next;\r\n        }else{\r\n            for(int i=0;i<Math.abs(step);i++)currentB = currentB.next;\r\n        }\r\n        while(currentA!=null&&currentB!=null){\r\n            if(currentA==currentB)return currentA;\r\n            currentA = currentA.next;\r\n            currentB = currentB.next;\r\n        }\r\n        return null;\r\n    }\r\n    public int getLength(ListNode head){\r\n        ListNode current = head;\r\n        int length = 0;\r\n        while(current!=null){\r\n            length++;\r\n            current = current.next;\r\n        }\r\n        return length;\r\n    }\r\n}"}