{"java":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\r\n        if(preorder==null||inorder==null||preorder.length==0||inorder.length==0)return null;\r\n        TreeNode root = buildTree(preorder,0,preorder.length-1,inorder,0,inorder.length-1);\r\n        return root;\r\n    }\r\n    public TreeNode buildTree(int[]preorder,int begin1,int end1,int[]inorder,int begin2,int end2){\r\n        if(begin1>=preorder.length||end1<0||begin2>=inorder.length||end2<0)return null;\r\n        if(begin1>end1)return null;\r\n        TreeNode root = new TreeNode(preorder[begin1]);\r\n        if(begin1==end1)return root;\r\n        int index = 0;\r\n        for(int i=begin2;i<=end2;i++){\r\n            if(preorder[begin1]==inorder[i]){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        root.left = buildTree(preorder,begin1+1,begin1+(index-begin2),inorder,begin2,index-1);\r\n        root.right = buildTree(preorder,begin1+(index-begin2)+1,end1,inorder,index+1,end2);\r\n        return root;\r\n    }\r\n}"}