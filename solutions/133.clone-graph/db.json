{"java":"/**\r\n * Definition for undirected graph.\r\n * class UndirectedGraphNode {\r\n *     int label;\r\n *     List<UndirectedGraphNode> neighbors;\r\n *     UndirectedGraphNode(int x) { label = x; neighbors = new ArrayList<UndirectedGraphNode>(); }\r\n * };\r\n */\r\npublic class Solution {\r\n    Map<Integer,UndirectedGraphNode>map = new HashMap<>();\r\n    public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) {\r\n       return clone(node);\r\n    }\r\n    public UndirectedGraphNode clone(UndirectedGraphNode node){\r\n        if(node==null)return null;\r\n        if(map.containsKey(node.label)){\r\n            return map.get(node.label);\r\n        }\r\n        UndirectedGraphNode clone = new UndirectedGraphNode(node.label);\r\n        map.put(clone.label,clone);\r\n        for(UndirectedGraphNode n:node.neighbors){\r\n            clone.neighbors.add(clone(n));\r\n        }\r\n        return clone;\r\n    }\r\n    \r\n}"}