{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode mergeKLists(ListNode[] lists) {\r\n        if(lists==null||lists.length==0)return null;\r\n        Queue <ListNode>queue = new PriorityQueue<ListNode>(lists.length,new Comparator<ListNode>(){\r\n            @Override\r\n            public int compare(ListNode l1,ListNode l2){\r\n                if(l1.val<l2.val)return -1;\r\n                if(l1.val>l2.val)return 1;\r\n                else return 0;\r\n            }\r\n            }\r\n            );\r\n            ListNode result = new ListNode(1);\r\n            ListNode temp = result;\r\n            for(ListNode i:lists){\r\n                if(i!=null)\r\n                queue.add(i);\r\n            }\r\n            while(!queue.isEmpty()){\r\n                temp.next = queue.poll();\r\n                temp = temp.next;\r\n                if(temp.next!=null)queue.add(temp.next);\r\n            }\r\n            return result.next;\r\n    }\r\n}"}