{"java":"public class Solution {\r\n    List<String>list;\r\n    public List<String> fullJustify(String[] words, int maxWidth) {\r\n        list = new ArrayList<>();\r\n        if(words==null||words.length==0)return list;\r\n        int index = 0;\r\n        while(index<words.length){\r\n            int last = index+1;\r\n            int count = words[index].length();\r\n            while(last<words.length){\r\n                if(count+1+words[last].length()>maxWidth)break;\r\n                count+=(words[last].length()+1);\r\n                last++;\r\n            }\r\n            StringBuilder builder = new StringBuilder();\r\n             int diff = last - index - 1;\r\n            // if last line or number of words in the line is 1, left-justified\r\n            if (last == words.length || diff == 0) {\r\n                for (int i = index; i < last; i++) {\r\n                    builder.append(words[i] + \" \");\r\n                }\r\n                builder.deleteCharAt(builder.length() - 1);\r\n                for (int i = builder.length(); i < maxWidth; i++) {\r\n                    builder.append(\" \");\r\n                }\r\n            } else {\r\n                // middle justified\r\n                int spaces = (maxWidth - count) / diff;\r\n                int r = (maxWidth - count) % diff;\r\n                for (int i = index; i < last; i++) {\r\n                    builder.append(words[i]);\r\n                    if (i < last - 1) {\r\n                        for (int j = 0; j <= (spaces + ((i - index) < r ? 1 : 0)); j++) {\r\n                            builder.append(\" \");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            list.add(builder.toString());\r\n            index = last;\r\n        }\r\n        return list;\r\n    }\r\n}"}