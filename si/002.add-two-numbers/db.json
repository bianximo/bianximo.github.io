{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\r\n        ListNode newHead = new ListNode(-1);\r\n        ListNode cur = newHead;\r\n        ListNode current1 = l1,current2 = l2;\r\n        int add = 0;\r\n        while(current1!=null&&current2!=null){\r\n            int sum = current1.val+current2.val+add;\r\n            if(sum>=10){\r\n                add = 1;\r\n                sum-=10;\r\n            }else add = 0;\r\n            cur.next = new ListNode(sum);\r\n            cur = cur.next;\r\n            current1 = current1.next;\r\n            current2 = current2.next;\r\n        }\r\n        while(current1!=null){\r\n            int sum = current1.val+add;\r\n            if(sum>=10){\r\n                add = 1;\r\n                sum-=10;\r\n            }else add = 0;\r\n            cur.next = new ListNode(sum);\r\n            cur = cur.next;\r\n            current1 = current1.next;\r\n        }while(current2!=null){\r\n            int sum = current2.val+add;\r\n            if(sum>=10){\r\n                add = 1;\r\n                sum-=10;\r\n            }else add = 0;\r\n            cur.next = new ListNode(sum);\r\n            cur = cur.next;\r\n            current2 = current2.next;\r\n        }\r\n        if(add==1)cur.next = new ListNode(1);\r\n        return newHead.next;\r\n    }\r\n}"}